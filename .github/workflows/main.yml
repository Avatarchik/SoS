name: Unity Build

on:
  push: { branches: [master] }

env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}

jobs:
  buildAndTestForSomePlatforms:
    name: Build for ${{ matrix.targetPlatform }} on version ${{ matrix.unityVersion }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        unityVersion:
          - 2019.3.1f1
        targetPlatform:
          - WebGL # WebGL.
    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true
           # Cache
      - uses: actions/cache@v1.1.0
        with:
          path: Library
          key: Library

      - uses: webbertakken/unity-test-runner@v1.3
        id: testRunner
        with:
          projectPath: ${{ matrix.projectPath }}
          unityVersion: ${{ matrix.unityVersion }}
      - uses: actions/upload-artifact@v1
        with:
          name: Test results (all modes)
          path: ${{ steps.testRunner.outputs.artifactsPath }}
      - uses: webbertakken/unity-builder@v0.10
        with:
          projectPath: ${{ matrix.projectPath }}
          unityVersion: ${{ matrix.unityVersion }}
          targetPlatform: ${{ matrix.targetPlatform }}

      - run: ls
    # Runs a set of commands using the runners shell
      - name: Push Build to Repo
        run: |
          remote_repo="https://${GITHUB_ACTOR}:${{secrets.PAT_TOKEN}}@github.com/${GITHUB_REPOSITORY}.git"
          git config http.sslVerify false
          git remote add publisher "${remote_repo}"
          git checkout master
          git config --global user.email ${{secrets.GH_EMAIL}}
          git config --global user.name ${{secrets.GH_USERNAME}}
          timestamp=$(date -u)
          git pull --rebase publisher master
          sudo cp -avr build unity          
          git add unity
          git commit -m "Automated publish: ${timestamp} ${GITHUB_SHA}" || exit 0
          
          git push publisher master
      - name: Notify SoS Web
        run:  |
            curl -X POST https://api.github.com/repos/${{secrets.GH_USERNAME}}/${{secrets.WEB_REPO}}/dispatches \
            -H 'Accept: application/vnd.github.everest-preview+json' \
            -u "${{secrets.GH_USERNAME}}:${{secrets.PAT_TOKEN}}" \
            --data '{"event_type": "update-web", "client_payload": { "repository": "'"$GITHUB_REPOSITORY"'" }}'
            
            
      - uses: s0/git-publish-subdir-action@master
        env:
          REPO: self
          BRANCH: gh-pages
          FOLDER: build/WebGL/WebGL
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/upload-artifact@v1
        with:
          name: Build
          path: build

    
